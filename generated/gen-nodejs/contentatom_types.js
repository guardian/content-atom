//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var tenfour_ttypes = require('./tenfour_types')


var ttypes = module.exports = {};
ContentAtom = module.exports.ContentAtom = function(args) {
  this.tenfour = null;
  if (args) {
    if (args.tenfour !== undefined) {
      this.tenfour = args.tenfour;
    }
  }
};
ContentAtom.prototype = {};
ContentAtom.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.tenfour = new tenfour_ttypes.Content();
        this.tenfour.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ContentAtom.prototype.write = function(output) {
  output.writeStructBegin('ContentAtom');
  if (this.tenfour !== null && this.tenfour !== undefined) {
    output.writeFieldBegin('tenfour', Thrift.Type.STRUCT, 1);
    this.tenfour.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

